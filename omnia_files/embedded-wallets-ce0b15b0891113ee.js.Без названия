(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2874],{1547:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.generateKeyPair=d,t.encrypt=function(e,t){let a=d(),r=i.default.randomBytes(i.default.box.nonceLength);return{cipherText:i.default.box(t,r,e,a.privateKey),ephemeralPublicKey:a.publicKey,nonce:r}},t.decrypt=function(e,t){let a=i.default.box.open(t.cipherText,t.nonce,t.ephemeralPublicKey,e);if(null===a)throw new n.DecryptionError("Decryption failed");return a};let i=r(a(88934)),n=a(25474);function d(){let e=i.default.box.keyPair();return{publicKey:e.publicKey,privateKey:e.secretKey}}},3854:(e,t,a)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/apps/[app_id]/embedded-wallets",function(){return a(12022)}])},12022:(e,t,a)=>{"use strict";a.r(t),a.d(t,{__N_SSP:()=>ey,default:()=>ep});var r=a(6029),i=a(95669),n=a.n(i),d=a(82177),o=a(55729),s=a(45028),c=a(41269),l=a(66322),y=a(52516),p=a(77473),_=a(46871),u=a(15775),v=a(31168);let w=(e,t)=>{throw null!=t?t:Error("Expected never, got: ".concat(e))};var h=a(51642).Buffer;function I(e){let{message:t,privateKey:a,chainType:r}=e;return"bitcoin-segwit"===r?v.bI.sign(h.from(t),a).toDERRawBytes():"bitcoin-taproot"===r?v.ko.sign(h.from(t),a):w(r)}async function f(e){let{appId:t,appClientId:a,accessToken:r,hdWalletIndex:i,chainType:n,entropy:d}=e,o=(0,u.E)({entropy:d,index:i,pathType:"bitcoin-taproot"===n?"taproot":"segwit"}),s=await (0,_.QQ)({appId:t,appClientId:a,accessToken:r,address:o.address,chainType:n}),c=function(e){let{domain:t,publicKeyHex:a,address:r,uri:i,nonce:n,issuedAt:d}=e;return"".concat(t," wants you to sign in with your Bitcoin account:\n").concat(a,"\n\nYou are proving you own ").concat(r,".\n\nURI: ").concat(i,"\nVersion: 1\nNonce: ").concat(n,"\nIssued At: ").concat(null!=d?d:new Date().toISOString(),"\nChain ID: ").concat("000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f","\nResources:\n- https://privy.io")}({domain:window.location.host,publicKeyHex:(0,y.My)(o.publicKey),uri:window.location.origin,address:o.address,nonce:s}),l=I({message:c,privateKey:o.privateKey,chainType:n});return await (0,_.Zn)({appId:t,appClientId:a,accessToken:r,data:{message:c,signature:p.K3.encode(l),chain_type:n,hd_node_index:i}})}var m=a(88934),g=a.n(m),T=a(27510),A=a(24610),E=a(51642).Buffer;async function P(e){let{appId:t,appClientId:a,accessToken:r,hdWalletIndex:i,entropy:n}=e;if(i<=0)throw new A.Pi("invalid_request_arguments","Failed to create additional wallet: invalid wallet index");let d=(0,T.kG)({entropy:n,index:i}),o=d.publicKey.toBase58(),s=await _.QQ({appId:t,appClientId:a,accessToken:r,address:o,chainType:"solana"}),c=(0,T.zT)(window.location.host,window.location.origin,o,s),l=g().sign.detached(E.from(c),d.secretKey);return await _.Zn({appId:t,appClientId:a,accessToken:r,data:{message:c,signature:p.K3.encode(l),hd_node_index:i,chain_type:"solana"}}),{keypair:d,address:o}}var N=a(48022),S=a(29358);let O=p.K3.decode(S.A.DELEGATED_ACTIONS_TEE_PUBLIC_KEY||""),D=async e=>{let{entropy:t,delegatedWallets:a,appId:r,appClientId:i,accessToken:n}=e,[d,o]=await (0,T.uY)(t);if("string"!=typeof S.A.DELEGATED_ACTIONS_TEE_PUBLIC_KEY)throw new A.Pi("error","Cannot delegate wallet actions - NEXT_PUBLIC_DELEGATED_ACTIONS_TEE_PUBLIC_KEY is not set.");let s=(0,N.Lv)(O,p.K3.encode(o));await (0,_.IW)({appId:r,appClientId:i,accessToken:n,data:{app_share:p.K3.encode(d),encrypted_tee_share:s,delegated_addresses:a.map(e=>{let{address:t,chainType:a,walletIndex:r}=e;return{address:t,chain_type:a,wallet_index:r}})}})};var K=a(19408);async function C(e){let t=(0,T.eB)({entropy:e,opts:{path:"m/3457'/10'/1'/0/".concat(0)}}).getHdKey().privateKey;return{publicKey:await (0,K.Rn)(t),privateKey:t}}async function b(e){let{appId:t,appClientId:a,entropy:r,accessToken:i}=e,{publicKey:n}=await C(r);return await _.aV({appId:t,appClientId:a,signerPublicKey:"0x".concat(K.jn.bytesToHex(n)),auth:{accessToken:i,mfaToken:null}})}var R=a(32607),M=a(31078),x=a(51642).Buffer;let L=M.z.string().regex(/^[A-Za-z0-9+/]*={0,2}\.[A-Za-z0-9+/]*={0,2}$/,{message:"Must be two base64 strings separated by a single period"});var k=a(57761),V=a(79862);async function U(e,t){let{privateKey:a,chainType:r}=e;switch(t.method){case"sign":return{method:t.method,data:{signature:p.K3.encode(I({privateKey:a,message:t.params.message,chainType:r}))}};case"signTransaction":return{method:t.method,data:{signedTransaction:function(e){let{txAsPSBTHexString:t,privateKey:a}=e,r=V.ZX.fromPSBT((0,y.aT)(t),{allowLegacyWitnessUtxo:!0});return r.sign(a),r.finalize(),r.hex}({txAsPSBTHexString:t.params.psbt,privateKey:a})}}}}var W=a(94741),q=a(15519);async function G(e,t){if("ethereum"===t.chainType&&"ethereum"===e.chainType)return await (0,W.A)(e,t.request);if("solana"===t.chainType&&"solana"===e.chainType)return await (0,q.A)(e.wallet.keypair,{...t,publicKey:t.entropyId,signingPublicKey:e.wallet.address});if("bitcoin-segwit"===t.chainType&&"bitcoin-segwit"===e.chainType||"bitcoin-taproot"===t.chainType&&"bitcoin-taproot"===e.chainType)return await U({privateKey:e.wallet.privateKey,chainType:t.chainType},t.request);if("p256"===t.chainType&&"p256"===e.chainType&&"sign"===t.request.method)return{method:t.request.method,data:{signature:await (0,k.b)({message:t.request.params.message,privateKey:e.wallet.privateKey})}};throw new A.Pi("invalid_request_arguments","Unknown chain type")}var Y=a(33230);async function B(e){let{appId:t,userId:a,address:r}=e;if(!await Y.A.get({appId:t,userId:a,address:r}))throw new A.Pi("wallet_not_on_device","Failed to initialize wallet: wallet with address '".concat(r,"' not loaded on this device"))}var F=a(79822);let H={ethereum:{createFromPrivateKey:T.Bt,createSiwxMessage:T.t5},solana:{createFromPrivateKey:T.UI,createSiwxMessage:T.zT}};async function z(e){let{appId:t,appClientId:a,userId:r,accessToken:i,privateKey:n,chainType:d}=e,{createFromPrivateKey:o,createSiwxMessage:s}=H[d],c=await o(n),{deviceShares:l,recoveryShares:y,wallet:u,entropy:v,signMessage:w}=c,h="address"in c?c.address:c.wallet.address,[I,f]=l,[m,g]=y,[A,{encryptionKey:E,walletRecoveryOutput:P}]=await Promise.all([_.QQ({appId:t,appClientId:a,accessToken:i,address:h,chainType:d}),(0,F.cq)({recoveryType:"privy_generated_recovery_key"})]),[N,S]=await Promise.all([(0,T.EN)(E),(0,T.vb)(m,E)]),O=s(window.location.host,window.location.origin,h,A),D=await w({message:O}),K=(0,T.hE)(),{recovery_key:C}=await (0,F.qz)(P);return await _.gc({appId:t,appClientId:a,accessToken:i,data:{entropy_key:h,entropy_key_verifier:"ethereum"===d?"ethereum-address-verifier":"solana-address-verifier",chain_type:d,message:O,signature:D,device_id:K,device_auth_share:p.K3.encode(f),recovery_auth_share:p.K3.encode(g),encrypted_recovery_share:p.K3.encode(S.encryptedShare),encrypted_recovery_share_iv:p.K3.encode(S.encryptedShareIV),recovery_type:"privy_generated_recovery_key",recovery_key_hash:p.K3.encode(N),recovery_key:C,imported:!0}}),await Y.A.set({appId:t,userId:r,address:h},{share:p.K3.encode(I),deviceId:K}),{chainType:d,entropyType:"private-key",wallet:u,entropy:v}}var J=a(41033);async function X(e){let{mfaCode:t,mfaMethod:a,hasSetMfaToken:r,verificationKeys:i,...n}=e,d=await (0,J.X)({appId:n.appId,appClientId:n.appClientId,accessToken:n.accessToken,mfaCode:t,mfaMethod:a,userId:n.userId,relyingParty:n.relyingParty,hasSetMfaToken:r,verificationKeys:i});switch(n.method){case"sms":return await _.St({appId:n.appId,appClientId:n.appClientId,accessToken:n.accessToken,phoneNumber:n.phoneNumber,mfaToken:d});case"totp":return await _.O({appId:n.appId,appClientId:n.appClientId,accessToken:n.accessToken,mfaToken:d});default:throw Error("Unknown mfa method")}}var j=a(51014),$=a(36902);async function Q(e){switch(e.method){case"sms":return await _._o({appId:e.appId,appClientId:e.appClientId,accessToken:e.accessToken,code:e.code,phoneNumber:e.phoneNumber});case"totp":return await _.q$({appId:e.appId,appClientId:e.appClientId,accessToken:e.accessToken,code:e.code});case"passkey":let t=await (0,J.X)({appId:e.appId,appClientId:e.appClientId,accessToken:e.accessToken,mfaCode:null,mfaMethod:null,relyingParty:"",userId:e.userId,hasSetMfaToken:e.hasSetMfaToken,verificationKeys:e.verificationKeys});await _.NB({appId:e.appId,appClientId:e.appClientId,accessToken:e.accessToken,credentialIds:e.credentialIds,removeForLogin:e.removeForLogin,mfaToken:t}),0===e.credentialIds.length&&j.A.del({appId:e.appId,userId:e.userId});return;default:throw Error("Unknown mfa method")}}function Z(e){if("hd-entropy"!==e.entropyType)throw new A.Pi("hd_wallet_required","This action requires a hierarchical deterministic wallet. Imported wallets are not supported.")}async function ee(e){let{appId:t,appClientId:a,userId:r,accessToken:i,method:n,mfaCode:d,mfaMethod:o,relyingParty:s,hasSetMfaToken:c,verificationKeys:l}=e,y=await (0,J.X)({appId:t,appClientId:a,accessToken:i,mfaCode:d,mfaMethod:o,userId:r,relyingParty:s,hasSetMfaToken:c,verificationKeys:l}),p=await et({appId:t,appClientId:a,accessToken:i,method:n,mfaToken:y});return j.A.del({appId:t,userId:r}),p}async function et(e){let{appId:t,appClientId:a,accessToken:r,method:i,mfaToken:n}=e;switch(i){case"sms":return await _.jE({appId:t,appClientId:a,accessToken:r,mfaToken:n});case"totp":return await _.hH({appId:t,appClientId:a,accessToken:r,mfaToken:n});default:throw Error("Unknown mfa method")}}async function ea(e){let{mfaMethod:t,mfaCode:a,relyingParty:r,hasSetMfaToken:i,verificationKeys:n,...d}=e,o=await (0,J.X)({appId:d.appId,appClientId:d.appClientId,accessToken:d.accessToken,userId:d.userId,mfaCode:a,mfaMethod:t,relyingParty:r,hasSetMfaToken:i,verificationKeys:n});await _.v$({appId:d.appId,appClientId:d.appClientId,accessToken:d.accessToken,credentialId:d.credentialId,removeAsMfa:d.removeAsMfa,mfaToken:o}),j.A.del({appId:d.appId,userId:d.userId})}var er=a(6159),ei=a(78933);function en(e){let{allowedOrigins:t,url:a}=e,r=new URL(a);if(0===t.length||t.some(e=>"*"===e.trim()))return!0;for(let e of t)if(r.origin===e||(function(e){let t=e.replace(/\./g,"\\.").replace(/\*/g,"[^.]*");return new RegExp("^".concat(t,"$"))})(e).test(r.origin))return!0;return!1}let ed={"privy:signer:create":"embedded_wallet_iframe_create_signer","privy:user-signer:sign":"embedded_wallet_iframe_user_signer_sign","privy:wallet:create":"embedded_wallet_iframe_create","privy:wallet:create-additional":"embedded_wallet_iframe_create_additional","privy:wallet:import":"embedded_wallet_iframe_import","privy:wallet:set-recovery-password":"embedded_wallet_iframe_set_recovery_password","privy:wallet:set-recovery":"embedded_wallet_iframe_set_recovery","privy:wallet:recover":"embedded_wallet_iframe_recover","privy:wallet:rpc":"embedded_wallet_iframe_rpc","privy:solana-wallet:create":"embedded_solana_wallet_iframe_create","privy:solana-wallet:create-additional":"embedded_solana_wallet_iframe_create_additional","privy:solana-wallet:recover":"embedded_wallet_iframe_solana_recover","privy:solana-wallet:rpc":"embedded_solana_wallet_iframe_rpc","privy:farcaster:init-signer":"embedded_wallet_iframe_farcaster_signer_init","privy:farcaster:sign":"embedded_wallet_iframe_farcaster_sign","privy:delegated-actions:consent":"embedded_wallet_iframe_delegated_actions_consent","privy:wallets:add":"embedded_wallet_iframe_create_additional","privy:wallets:import":"embedded_wallet_iframe_import","privy:wallets:set-recovery":"embedded_wallet_iframe_set_recovery","privy:wallets:connect":"embedded_wallet_iframe_connect","privy:wallets:recover":"embedded_wallet_iframe_recover","privy:wallets:rpc":"embedded_wallet_iframe_rpc"};function eo(e,t){var a,r,i,n,d;if(window.PRIVY_NATIVE_IOS)try{return null===(a=window.webkit)||void 0===a?void 0:a.messageHandlers.iOSProxy.postMessage(JSON.stringify(e))}catch(e){}if(window.PRIVY_NATIVE_ANDROID)try{return null===(r=window.AndroidProxy)||void 0===r?void 0:r.postMessage(JSON.stringify(e))}catch(e){}if(window.PRIVY_UNITY)try{return null===(i=window.UnityProxy)||void 0===i?void 0:i.postMessage(JSON.stringify(e))}catch(e){}if((0,ei.l_)(window))try{return null===(d=window.ReactNativeWebView)||void 0===d?void 0:null===(n=d.postMessage)||void 0===n?void 0:n.call(d,JSON.stringify(e))}catch(e){}setTimeout(()=>{window.parent&&window.parent.postMessage(e,t)},0)}function es(e,t,a,r){eo({id:t,event:a,data:r},e.origin)}function ec(e,t,a,r){eo({id:t,event:a,error:{type:(0,A.xR)(r)?r.type:A.z6,message:r.message}},e.origin)}function el(e){let t=(0,o.useRef)(null),r=(0,o.useRef)(null),i=(0,o.useRef)(e.verificationKeys);(0,o.useEffect)(()=>{i.current=e.verificationKeys},[e.verificationKeys]);let n=(0,o.useRef)(!1);(0,o.useEffect)(()=>{var e;let t=window.location.href.startsWith("http://localhost"),a=[...null!==(e=location.ancestorOrigins)&&void 0!==e?e:[]].some(e=>e.startsWith("http://localhost"));t||a||(console.log("%cWarning!","color:#F16552; font-size:50px; font-weight: bold; -webkit-text-stroke: 1px black;"),console.log("%cYou are reading this message because you opened the browser console, a developer tool. Do not enter or paste code you do not understand. Never share your tokens or any other info with anyone. If someone told you to do this, it is very likely a scam.","font-size: 18px;"))},[]);let y=new Set(["clmv1d6am07asib0fs4ss7w2x","clq5vcgub015rju0fd4j1thhp"]);function p(e,a,r){j.A.get({appId:e,userId:a})&&!y.has(e)?t.current=null:t.current=r}return(0,o.useEffect)(()=>{let o=e.appClientId;async function y(y){var u,v,h,I,m,g,T,E;if(!y)return;let N="string"==typeof y.data?JSON.parse(y.data):y.data;if(!("string"==typeof N.event&&/^privy:.+/.test(N.event))||(T=e.allowedDomains,!(window.PRIVY_NATIVE_IOS||window.PRIVY_NATIVE_ANDROID||window.PRIVY_UNITY||(0,ei.l_)(window)||en({allowedOrigins:T,url:y.origin}))))return;if(!(0===(E=e.allowedDomains||[]).length?!(void 0!==location.ancestorOrigins&&location.ancestorOrigins.length>1):void 0===location.ancestorOrigins||!(location.ancestorOrigins.length>0)||[...location.ancestorOrigins].every(e=>en({allowedOrigins:E,url:e}))))return ec(y,N.id,N.event,new c.D_("Frame ancestor is not allowed"));if("privy:iframe:ready"===N.event)return es(y,N.id,N.event,{});if("privy:mfa:clear"===N.event){let t=N.data.userId.replace(/^did:privy:/,"");return j.A.del({appId:e.appId,userId:t}),es(y,N.id,N.event,{})}let S=N.data.accessToken;if(!S)return ec(y,N.id,N.event,new c.D_("Missing auth token."));let O=await (0,er.d)(S,i.current,e.appId);if(!O)return ec(y,N.id,N.event,new c.D_("Invalid auth token."));let{userId:K,appId:M}=O;try{let s=null!==(u=ed[N.event])&&void 0!==u?u:"embedded_wallet_iframe_invalid_event",c=(t,a)=>(0,_.$1)({appId:M,appClientId:o,accessToken:S,clientId:e.clientAnalyticsId,eventName:t,payload:a});switch(ed.hasOwnProperty(N.event)&&c("".concat(s,"_started"),{..."privy:wallet:create"===N.event&&N.data.recoveryMethod&&{recoveryMethod:N.data.recoveryMethod},..."privy:wallet:set-recovery-password"===N.event&&{existingRecoveryMethod:N.data.existingRecoveryMethod,targetRecoveryMethod:"user-passcode"},..."privy:wallet:set-recovery"===N.event&&{existingRecoveryMethod:N.data.existingRecoveryMethod,targetRecoveryMethod:N.data.recoveryMethod},..."privy:wallet:rpc"===N.event&&N.data.requesterAppId&&{requesterAppId:N.data.requesterAppId}}),N.event){case"privy:signer:create":{let{handleCreateP256Signer:e}=await a.e(9657).then(a.bind(a,39657)),{publicKey:t}=await e({appId:M,appClientId:o,userId:K,accessToken:S,clientType:(0,ei.yS)(window),createWalletEvent:c,recoveryPassword:N.data.recoveryPassword,recoveryMethod:N.data.recoveryMethod,recoveryAccessToken:N.data.recoveryAccessToken,recoveryKey:N.data.recoveryKey,recoverySecretOverride:N.data.recoverySecretOverride,iCloudRecordNameOverride:N.data.iCloudRecordNameOverride});return es(y,N.id,N.event,{publicKey:t})}case"privy:user-signer:sign":{let{handleUserSignerRequest:e}=await Promise.all([a.e(8797),a.e(4741)]).then(a.bind(a,27122)),{signature:t}=await e({appId:M,userId:K,appClientId:o,...N.data,verificationKeys:i.current,hasSetMfaToken:n,cachedUserAuthorizationKey:r});return es(y,N.id,N.event,{signature:t})}case"privy:wallets:add":{let{entropy:a,entropyType:r}=await (0,$.A)({...N.data,appId:M,appClientId:o,verificationKeys:i.current,clientAnalyticsId:e.clientAnalyticsId,userId:K,hasSetMfaToken:n,cache:t.current});if("private-key"===r)throw new A.Pi("hd_wallet_required","This action requires a hierarchical deterministic wallet. Imported wallets are not supported.");if("bitcoin-taproot"===N.data.chainType||"bitcoin-segwit"===N.data.chainType){let{address:e}=await f({...N.data,appId:M,appClientId:o,entropy:a,chainType:N.data.chainType});return es(y,N.id,N.event,{address:e,hdWalletIndex:N.data.hdWalletIndex})}if("ethereum"===N.data.chainType){let{address:e}=await (0,l.h6)({...N.data,appId:M,appClientId:o,entropy:a});return es(y,N.id,N.event,{address:e,hdWalletIndex:N.data.hdWalletIndex})}if("solana"===N.data.chainType){let{address:e}=await P({...N.data,appId:M,appClientId:o,entropy:a});return es(y,N.id,N.event,{address:e,hdWalletIndex:N.data.hdWalletIndex})}if("p256"===N.data.chainType)throw new A.Pi("invalid_request_arguments","Invalid chain type");return w(N.data.chainType,new A.Pi("invalid_request_arguments","Unknown chain type"))}case"privy:wallets:connect":return await B({appId:M,userId:K,address:N.data.entropyId}),es(y,N.id,N.event,{entropyId:N.data.entropyId});case"privy:wallets:set-recovery":{let{entropy:a,entropyType:r}=await (0,$.A)({hasSetMfaToken:n,verificationKeys:i.current,cache:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.entropyId,entropyIdVerifier:N.data.entropyIdVerifier,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});if("ethereum-address-verifier"!==N.data.entropyIdVerifier&&"solana-address-verifier"!==N.data.entropyIdVerifier)throw new A.Pi("invalid_request_arguments","Unexpected entropy ID type: ".concat(N.data.entropyIdVerifier));if("private-key"===r)throw new A.Pi("hd_wallet_required","This action requires a hierarchical deterministic wallet. Imported wallets are not supported.");let d=await (0,l._U)({appId:M,appClientId:o,userId:K,accessToken:S,entropy:a,entropyId:N.data.entropyId,entropyIdVerifier:N.data.entropyIdVerifier,clientType:(0,ei.yS)(window),recoveryOptions:N.data,createWalletEvent:c});return c("".concat(s,"_completed"),{address:d.entropyId,existingRecoveryMethod:N.data.existingRecoveryMethod,targetRecoveryMethod:N.data.recoveryMethod}),es(y,N.id,N.event,{entropyId:d.entropyId,entropyIdVerifier:N.data.entropyIdVerifier,recoveryMethod:N.data.recoveryMethod})}case"privy:wallets:recover":{let t=await (0,l.uP)({hasSetMfaToken:n,verificationKeys:i.current,...N.data,appId:M,appClientId:o,userId:K,clientAnalyticsId:e.clientAnalyticsId,clientType:(0,ei.yS)(window)});return p(M,K,t),c("".concat(s,"_completed"),{entropyId:t.entropyId}),es(y,N.id,N.event,{entropyId:t.entropyId})}case"privy:wallets:rpc":{let a=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,...N.data,appId:M,userId:K,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,cachedWalletData:t.current}),r=await G(a,N.data);return p(M,K,a),c("".concat(s,"_completed"),{address:a.wallet.address,method:r.method,...N.data.requesterAppId&&{requesterAppId:N.data.requesterAppId}}),es(y,N.id,N.event,{address:a.wallet.address,response:r})}case"privy:wallet:create":{let a;N.data.solanaAddress&&(a=(await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.solanaAddress,entropyIdVerifier:"solana-address-verifier",chainType:"solana",hdWalletIndex:0,accessToken:S,mfaCode:null,mfaMethod:null,relyingParty:""})).entropy);let{wallet:r}=await (0,l.io)({appId:M,appClientId:o,userId:K,accessToken:S,existingEntropy:a,clientType:(0,ei.yS)(window),createWalletEvent:c,recoveryPassword:N.data.recoveryPassword,recoveryMethod:N.data.recoveryMethod,recoveryAccessToken:N.data.recoveryAccessToken,recoveryPin:N.data.recoveryPin,recoveryKey:N.data.recoveryKey,recoverySecretOverride:N.data.recoverySecretOverride,iCloudRecordNameOverride:N.data.iCloudRecordNameOverride});return c("".concat(s,"_completed"),{address:r.address}),es(y,N.id,N.event,{address:r.address})}case"privy:wallet:create-additional":let m=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.primaryWalletAddress,entropyIdVerifier:"ethereum-address-verifier",chainType:"ethereum",hdWalletIndex:0,accessToken:S,mfaCode:null,mfaMethod:null,relyingParty:""});Z(m);let{entropy:g}=m,T=await (0,l.h6)({...N.data,appId:M,appClientId:o,entropy:g});return c("".concat(s,"_completed"),{address:T.address}),es(y,N.id,N.event,{address:T.address});case"privy:wallet:import":case"privy:wallets:import":{let{wallet:e}=await z({appId:M,appClientId:o,userId:K,accessToken:S,privateKey:N.data.privateKey,chainType:"chainType"in N.data?N.data.chainType:"ethereum"});return c("".concat(s,"_completed"),{address:e.address}),es(y,N.id,N.event,{address:e.address})}case"privy:wallet:set-recovery-password":case"privy:wallet:set-recovery":{let a=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.address,entropyIdVerifier:"ethereum-address-verifier",chainType:"ethereum",hdWalletIndex:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});if("ethereum"!==a.chainType)throw new A.Pi("error","Expected Ethereum wallet data");let r="privy:wallet:set-recovery"===N.event?N.data:{...N.data,recoveryMethod:"user-passcode"};Z(a);let d=await (0,l._U)({appId:M,appClientId:o,userId:K,accessToken:S,entropy:a.entropy,entropyId:N.data.address,entropyIdVerifier:"ethereum-address-verifier",clientType:(0,ei.yS)(window),recoveryOptions:r,createWalletEvent:c});return c("".concat(s,"_completed"),{address:d.entropyId,existingRecoveryMethod:r.existingRecoveryMethod,targetRecoveryMethod:r.recoveryMethod}),es(y,N.id,N.event,{address:d.entropyId})}case"privy:wallet:connect":return await B({appId:M,userId:K,address:N.data.address}),es(y,N.id,N.event,{address:N.data.address});case"privy:wallet:recover":let E=await (0,l.uP)({hasSetMfaToken:n,verificationKeys:i.current,appId:M,clientAnalyticsId:e.clientAnalyticsId,appClientId:o,userId:K,accessToken:S,clientType:(0,ei.yS)(window),entropyId:N.data.address,entropyIdVerifier:"ethereum-address-verifier",recoveryPassword:N.data.recoveryPassword||N.data.recoveryPin,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty,recoveryAccessToken:N.data.recoveryAccessToken,recoverySecretOverride:N.data.recoverySecretOverride});return p(M,K,E),c("".concat(s,"_completed"),{address:E.wallet.address}),es(y,N.id,N.event,{address:E.wallet.address});case"privy:wallet:rpc":{let a=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.address,entropyIdVerifier:"ethereum-address-verifier",chainType:"ethereum",hdWalletIndex:null!==(v=N.data.hdWalletIndex)&&void 0!==v?v:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});if(p(M,K,a),"ethereum"!==a.chainType)throw new A.Pi("error","Expected Ethereum wallet data");let r=await (0,l.jt)(a,N.data.request);return c("".concat(s,"_completed"),{address:a.wallet.address,method:r.method,...N.data.requesterAppId&&{requesterAppId:N.data.requesterAppId}}),es(y,N.id,N.event,{address:N.data.address,response:r})}case"privy:solana-wallet:create":{let a;if(N.data.ethereumAddress){let r=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.ethereumAddress,entropyIdVerifier:"ethereum-address-verifier",chainType:"solana",hdWalletIndex:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});Z(r),a=r.entropy}let{wallet:r}=await (0,l.kL)({appId:M,appClientId:o,userId:K,accessToken:S,existingEntropy:a});return c("".concat(s,"_completed"),{publicKey:r.address}),es(y,N.id,N.event,{publicKey:r.address})}case"privy:solana-wallet:create-additional":{let a=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,userId:K,entropyId:N.data.primaryPublicKey,entropyIdVerifier:"solana-address-verifier",chainType:"solana",clientAnalyticsId:e.clientAnalyticsId,hdWalletIndex:0,accessToken:S,mfaCode:null,mfaMethod:null,relyingParty:""}),{address:r}=await P({appId:M,appClientId:o,accessToken:S,hdWalletIndex:N.data.hdWalletIndex,entropy:a.entropy});return c("".concat(s,"_completed"),{address:r}),es(y,N.id,N.event,{publicKey:r})}case"privy:solana-wallet:connect":return await B({appId:M,userId:K,address:N.data.publicKey}),es(y,N.id,N.event,{publicKey:N.data.publicKey});case"privy:solana-wallet:recover":let O=await (0,l.uP)({hasSetMfaToken:n,verificationKeys:i.current,appId:M,appClientId:o,userId:K,accessToken:S,entropyId:N.data.publicKey,entropyIdVerifier:"solana-address-verifier",mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty,clientAnalyticsId:e.clientAnalyticsId,clientType:(0,ei.yS)(window),recoveryAccessToken:N.data.recoveryAccessToken,recoverySecretOverride:N.data.recoverySecretOverride,recoveryPassword:N.data.recoveryPassword});return p(M,K,O),c("".concat(s,"_completed"),{publicKey:N.data.publicKey}),es(y,N.id,N.event,{publicKey:N.data.publicKey});case"privy:solana-wallet:rpc":let k=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.publicKey,entropyIdVerifier:"solana-address-verifier",chainType:"solana",hdWalletIndex:null!==(h=N.data.hdWalletIndex)&&void 0!==h?h:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});if(p(M,K,k),"solana"!==k.chainType)throw new A.Pi("error","Expected Ethereum wallet data");let V=await (0,l.Zv)(k.wallet.keypair,N.data);return c("".concat(s,"_completed"),{method:V.method,publicKey:N.data.publicKey}),es(y,N.id,N.event,{publicKey:N.data.publicKey,response:V});case"privy:delegated-actions:consent":{let a;if("ethereum"===N.data.rootWallet.chainType){let r=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.rootWallet.address,entropyIdVerifier:"ethereum-address-verifier",chainType:"ethereum",hdWalletIndex:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});Z(r),a=r.entropy}else if("solana"===N.data.rootWallet.chainType){let r=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.rootWallet.address,entropyIdVerifier:"solana-address-verifier",chainType:"solana",hdWalletIndex:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});Z(r),a=r.entropy}else throw new A.Pi("invalid_request_arguments","Unexpected chain type for root delegation wallet");return await D({entropy:a,delegatedWallets:N.data.delegatedWallets,appId:M,appClientId:o,accessToken:S}),es(y,N.id,N.event,{success:!0})}case"privy:mfa:verify":return await (0,J.X)({appId:M,appClientId:o,userId:K,hasSetMfaToken:n,verificationKeys:i.current,...N.data}),es(y,N.id,N.event,{});case"privy:mfa:init-enrollment":{let e=await X({appId:M,appClientId:o,userId:K,hasSetMfaToken:n,verificationKeys:i.current,...N.data});return es(y,N.id,N.event,{method:N.data.method,secret:e.totpSecret,authUrl:e.totpAuthUrl})}case"privy:mfa:submit-enrollment":return await Q({appId:M,appClientId:o,userId:K,hasSetMfaToken:n,verificationKeys:i.current,...N.data}),p(M,K,null),n.current=!0,es(y,N.id,N.event,{});case"privy:mfa:unenroll":return await ee({appId:M,appClientId:o,userId:K,hasSetMfaToken:n,verificationKeys:i.current,...N.data}),p(M,K,null),n.current=!1,es(y,N.id,N.event,{});case"privy:auth:unlink-passkey":return await ea({appId:M,appClientId:o,userId:K,hasSetMfaToken:n,verificationKeys:i.current,...N.data}),p(M,K,null),n.current=!1,es(y,N.id,N.event,{});case"privy:farcaster:init-signer":{let a=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.address,entropyIdVerifier:"ethereum-address-verifier",chainType:"ethereum",hdWalletIndex:null!==(I=N.data.hdWalletIndex)&&void 0!==I?I:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});p(M,K,a),Z(a);let{entropy:r}=a,d=await b({appId:M,appClientId:o,entropy:r,accessToken:N.data.accessToken});return c("".concat(s,"_completed"),{address:a.wallet.address}),es(y,N.id,N.event,d)}case"privy:farcaster:sign":{let a=await (0,l.JG)({hasSetMfaToken:n,verificationKeys:i.current,cachedWalletData:t.current,appId:M,appClientId:o,clientAnalyticsId:e.clientAnalyticsId,userId:K,entropyId:N.data.address,entropyIdVerifier:"ethereum-address-verifier",chainType:"ethereum",hdWalletIndex:0,accessToken:S,mfaCode:N.data.mfaCode,mfaMethod:N.data.mfaMethod,relyingParty:N.data.relyingParty});p(M,K,a);let r=d._d.toBuffer(N.data.payload.hash);Z(a);let{entropy:_}=a,{privateKey:u}=await C(_),v=function(e){let{farcasterSignerPrivateKey:t,hash:a}=e;if(20!==a.length){let e=x.from(a).toString("utf-8");try{L.parse(e)}catch(e){throw Error("Invalid blake3 hash length. Expected 20 bytes.")}}return R.ev.sign(a,t)}({farcasterSignerPrivateKey:u,hash:r});return c("".concat(s,"_completed"),{address:a.wallet.address}),es(y,N.id,N.event,{hash:N.data.payload.hash,signature:d._d.fromBuffer(v)})}}}catch(e){if((0,A.$J)(e))return K&&j.A.del({appId:M,userId:K}),ec(y,N.id,N.event,new A.Pi("missing_or_invalid_mfa","MFA verification failed"));if(function(e){var t,a;let r=null===(t=e.data)||void 0===t?void 0:t.code,i=[s.s.INVALID_DATA,s.s.NOT_SUPPORTED,s.s.INVALID_DATA,s.s.NOT_SUPPORTED,s.s.USER_UNSUBSCRIBED].includes(r);return(null===(a=e.response)||void 0===a?void 0:a.status)===422&&i}(e))return K&&j.A.del({appId:M,userId:K}),ec(y,N.id,N.event,new A.Pi("twilio_verification_failed",null!==(g=null===(m=e.data)||void 0===m?void 0:m.error)&&void 0!==g?g:"MFA enrollment failed"));ec(y,N.id,N.event,e);return}}return(0,ei.k3)(window)?document.addEventListener("message",y):window.addEventListener("message",y),()=>{(0,ei.k3)(window)?document.removeEventListener("message",y):window.removeEventListener("message",y)}},[e.allowedDomains,e.appId,e.appClientId]),null}var ey=!0;function ep(e){let{appId:t,appClientId:a,clientAnalyticsId:i,allowedDomains:d,apiUrl:o,verificationKeys:s}=e;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n(),{children:(0,r.jsx)("title",{children:"Wallet \xb7 Privy"})}),(0,r.jsx)(el,{verificationKeys:s,appId:t,appClientId:a,clientAnalyticsId:i,allowedDomains:d,apiUrl:o})]})}},25474:(e,t)=>{"use strict";function a(e){return class extends Error{constructor(t){super(t),this.name=e}}}Object.defineProperty(t,"__esModule",{value:!0}),t.InvalidInputError=t.EncryptionKeyError=t.EncryptionSizeError=t.DecryptionError=void 0,t.DecryptionError=a("DecryptionError"),t.EncryptionSizeError=a("EncryptionSizeError"),t.EncryptionKeyError=a("EncryptionKeyError"),t.InvalidInputError=a("InvalidInputError")},41269:(e,t,a)=>{"use strict";a.d(t,{D_:()=>d,oC:()=>n});var r=a(45028);class i extends Error{toString(){return`${this.constructor.name}: ${this.message}${this.cause?` [cause: ${this.cause}]`:""}`}constructor(e,t,a,r){super(t),this.code=a,this.status=e,this.responseData=r}}class n extends i{constructor(e,t){super(400,e,t||r.s.INVALID_DATA)}}class d extends i{constructor(e,t){super(401,e,t)}}},45028:(e,t,a)=>{"use strict";a.d(t,{s:()=>i});var r,i=((r={}).OAUTH_ACCOUNT_SUSPENDED="oauth_account_suspended",r.MISSING_OR_INVALID_PRIVY_APP_ID="missing_or_invalid_privy_app_id",r.MISSING_OR_INVALID_PRIVY_CLIENT_ID="missing_or_invalid_privy_client_id",r.MISSING_OR_INVALID_PRIVY_ACCOUNT_ID="missing_or_invalid_privy_account_id",r.MISSING_OR_INVALID_TOKEN="missing_or_invalid_token",r.MISSING_OR_INVALID_MFA="missing_or_invalid_mfa",r.EXPIRED_OR_INVALID_MFA_TOKEN="expired_or_invalid_mfa_token",r.INVALID_DATA="invalid_data",r.INVALID_CREDENTIALS="invalid_credentials",r.INVALID_CAPTCHA="invalid_captcha",r.LINKED_TO_ANOTHER_USER="linked_to_another_user",r.ALLOWLIST_REJECTED="allowlist_rejected",r.CANNOT_UNLINK_EMBEDDED_WALLET="cannot_unlink_embedded_wallet",r.CANNOT_UNLINK_SOLE_ACCOUNT="cannot_unlink_sole_account",r.CANNOT_LINK_MORE_OF_TYPE="cannot_link_more_of_type",r.LINKED_ACCOUNT_NOT_FOUND="linked_account_not_found",r.TOO_MANY_REQUESTS="too_many_requests",r.INVALID_ORIGIN="invalid_origin",r.MISSING_ORIGIN="missing_origin",r.INVALID_NATIVE_APP_ID="invalid_native_app_id",r.TOKEN_ALREADY_USED="token_already_used",r.ALREADY_LOGGED_OUT="already_logged_out",r.NOT_SUPPORTED="not_supported",r.USER_UNSUBSCRIBED="user_unsubscribed",r.MAX_APPS_REACHED="max_apps_reached",r.USER_LIMIT_REACHED="max_accounts_reached",r.DEVICE_REVOKED="device_revoked",r.WALLET_PASSWORD_EXISTS="wallet_password_exists",r.OAUTH_STATE_MISMATCH="oauth_state_mismatch",r.MAX_DENYLIST_ENTRIES_REACHED="max_denylist_entries_reached",r.MAX_TEST_ACCOUNTS_REACHED="max_test_accounts_reached",r.DISALLOWED_LOGIN_METHOD="disallowed_login_method",r.DISALLOWED_PLUS_EMAIL="disallowed_plus_email",r.DISALLOWED_RECOVERY_METHOD="disallowed_recovery_method",r.LEGACY_DASHBOARD_LOGIN_CONFIGURATION="legacy_dashboard_login_configuration",r.CANNOT_SET_PASSWORD="cannot_set_password",r.INVALID_PKCE_PARAMETERS="invalid_pkce_parameters",r.INVALID_APP_URL_SCHEME_CONFIGURATION="invalid_app_url_scheme_configuration",r.CROSS_APP_CONNECTION_NOT_ALLOWED="cross_app_connection_not_allowed",r.USER_DOES_NOT_EXIST="user_does_not_exist",r.ALREADY_EXISTS="resource_already_exists",r.ACCOUNT_TRANSFER_REQUIRED="account_transfer_required",r.USER_HAS_NOT_DELEGATED_WALLET="user_has_not_delegated_wallet",r.FEATURE_NOT_ENABLED="feature_not_enabled",r.INSUFFICIENT_FUNDS="insufficient_funds",r.TRANSACTION_BROADCAST_FAILURE="transaction_broadcast_failure",r.INVALID_POLICY_FORMAT="invalid_policy_format",r.POLICY_VIOLATION="policy_violation",r.AUTHORIZATION_KEY_HAS_ASSOCIATED_WALLETS="authorization_key_has_associated_wallets",r.INVALID_REQUEST="invalid_request",r)},48022:(e,t,a)=>{"use strict";t.Lv=function(e,t){let a=(0,n.encrypt)(e,d.encode(t)),i={cipherText:o(a.cipherText),ephemeralPublicKey:o(a.ephemeralPublicKey),nonce:o(a.nonce),version:1};return r.base64.encode(d.encode(JSON.stringify(i)))};let r=a(75958),i=a(93647),n=a(1547);a(1547),new TextDecoder;let d=new TextEncoder;function o(e){return btoa(String.fromCharCode(...e))}i.z.object({cipherText:i.z.string(),ephemeralPublicKey:i.z.string(),nonce:i.z.string(),version:i.z.literal(1)}).required()}},e=>{var t=t=>e(e.s=t);e.O(0,[8639,8052,1040,1078,7353,2181,4251,8194,3196,602,8825,636,6593,8792],()=>t(3854)),_N_E=e.O()}]);